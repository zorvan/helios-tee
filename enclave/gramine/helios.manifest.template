# --------------------------------
#             LIBOS
# --------------------------------

libos.entrypoint = "{{ self_exe }}"
#libos.check_invalid_pointers = true

# --------------------------------
#             LOADER
# --------------------------------

loader.entrypoint.uri = "file:{{ enclave_dir }}/trusted/gramine/libsysdb.so"
loader.insecure__use_cmdline_argv = true
loader.log_level = "{{ log_level }}"

loader.env.LD_LIBRARY_PATH = "/lib:/lib/x86_64-linux-gnu"
loader.env.MALLOC_ARENA_MAX = "1"
loader.env.RUST_BACKTRACE = "full"
loader.env.RUST_LOG = "none,helios=debug,hyper=error"

# --------------------------------
#             SYS
# --------------------------------

sys.stack.size = "2M"
# sys.brk.max_size = "1M"
sys.insecure__allow_eventfd = true
sys.enable_extra_runtime_domain_names_conf = true

# --------------------------------
#             SGX
# --------------------------------

sgx.trusted_files = [
  "file:{{ self_exe }}",
  "file:{{ enclave_dir }}/trusted/",
]

sgx.enclave_size = "4G"
sgx.max_threads = 32

sgx.isvprodid = 11
sgx.isvsvn    = 101

sgx.remote_attestation = "dcap"

sgx.debug = false
sgx.edmm_enable = false
sgx.preheat_enclave = false
sgx.file_check_policy = "strict"

# sgx.insecure__rpc_thread_num = 24
# sgx.require_avx    = false
# sgx.require_avx512 = false
# sgx.require_mpx    = false
# sgx.require_pkru   = false
# sgx.require_amx    = false
# sgx.require_exinfo = false

sgx.allowed_files = [
 # "file:/etc/nsswitch.conf",
 # "file:/etc/localtime",
 # "file:/etc/hosts",
 # "file:/etc/passwd",
]

# --------------------------------
#             FS
# --------------------------------

fs.mounts = [
  { path = "/lib", uri = "file:{{ enclave_dir }}/trusted/gramine/runtime/glibc" },
  { path = "/lib/x86_64-linux-gnu", uri = "file:{{ enclave_dir }}/trusted/arch_libdir" },
  { path = "/etc", uri = "file:{{ enclave_dir }}/trusted/etc" },
  
  # TMPFS
  { path = "/temporary", type = "tmpfs" },
  
  # SEALED
  { path = "/certificates", uri = "file:{{ enclave_dir }}/certificates", type = "encrypted", key_name = "_sgx_mrenclave" },
  { path = "/seal" , uri = "file:{{ enclave_dir }}/seal", type = "encrypted", key_name = "_sgx_mrenclave"},
]