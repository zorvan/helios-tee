# Henchman Dev manifest

loader.entrypoint = "file:{{ enclave_dir }}/trusted/gramine/libsysdb.so"
libos.entrypoint = "{{ self_exe }}"
loader.log_level = "{{ log_level }}"
#loader.log_level = "debug"

loader.env.RUST_LOG = "none,helios=debug,hyper=warning"

loader.env.LD_LIBRARY_PATH = "/lib:/lib/x86_64-linux-gnu"

# See https://gramine.readthedocs.io/en/latest/devel/performance.html#glibc-malloc-tuning
loader.env.MALLOC_ARENA_MAX = "1"

# For easier debugging â€” not strictly required to run this workload
loader.env.RUST_BACKTRACE = "full"

# MOUNTING FROM "URI" ON HOST, TO "PATH" ON GRAMINE
# TYPE can be chroot, encrypted, tmpfs(in-memory)
fs.mounts = [
  { path = "/lib", uri = "file:{{ enclave_dir }}/trusted/gramine/runtime/glibc" },
  { path = "/lib/x86_64-linux-gnu", uri = "file:{{ enclave_dir }}/trusted/arch_libdir" },
  { path = "/etc", uri = "file:{{ enclave_dir }}/trusted/etc" },
  
  { path = "/temporary", type = "tmpfs" },

  # ------ NOT SEALED!
  { path = "/certificates", uri = "file:{{ enclave_dir }}/certificates/", type = "chroot" },
  { path = "/seal" , uri = "file:{{ enclave_dir }}/seal/",  type = "chroot"},
]

# ONLY for DEV
sgx.allowed_files = [
  "file:{{ enclave_dir }}/seal/",
  "file:{{ enclave_dir }}/certificates/",
]

sgx.trusted_files = [
  "file:{{ self_exe }}",
  "file:{{ enclave_dir }}/trusted/",
]

# The Tokio runtime requires eventfd, and the Gramine implementation
# currently relies on the host in an insecure manner. This setting isn't
# suitable for production deployment, but works well as a stopgap during
# development while a proper implementation in Gramine is being worked on.
sys.insecure__allow_eventfd = true

sgx.enclave_size = "2G"
sgx.max_threads = 32
sgx.debug = true
loader.insecure__use_cmdline_argv = true

#sgx.insecure__rpc_thread_num = 24

#sgx.require_avx    = false
#sgx.require_avx512 = false
#sgx.require_mpx    = false
#sgx.require_pkru   = false
#sgx.require_amx    = false
#sgx.require_exinfo = false

sgx.file_check_policy = "strict"

sgx.remote_attestation = "dcap"

sgx.isvprodid = 10
sgx.isvsvn    = 100
